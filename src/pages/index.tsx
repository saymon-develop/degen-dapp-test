import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import {Layout} from "@/layout";
import { ColorType, createChart } from 'lightweight-charts';
import { useEffect, useRef } from 'react';

export const ChartComponent = (props:any) => {
    const {
        data,
        colors: {
            backgroundColor = 'black',
            lineColor = '#2962FF',
            textColor = 'white',
            areaTopColor = '#2962FF',
            areaBottomColor = 'rgba(41, 98, 255, 0.28)',
        } = {},
    } = props;

    const chartContainerRef = useRef<HTMLDivElement | null>(null);

    useEffect(

        () => {
        // if(chartContainerRef?.current === null) return

            const handleResize = () => {

              chart.applyOptions({ width: chartContainerRef.current?.clientWidth });
            };
            

          const chart = createChart(chartContainerRef.current!, {
              layout: {
                background: { type: ColorType.Solid, color: backgroundColor },
                textColor,
              },

              width: chartContainerRef.current?.clientWidth,
              height: 300,
            });
            chart.timeScale().fitContent();
            
            const newSeries = chart.addAreaSeries({ lineColor, topColor: areaTopColor, bottomColor: areaBottomColor });
            newSeries.setData(data);
            
            window.addEventListener('resize', handleResize);
          

            return () => {
                window.removeEventListener('resize', handleResize);

                chart.remove();
            };
        },
        [data, backgroundColor, lineColor, textColor, areaTopColor, areaBottomColor]
    );

  return (
        <div style={{width: "100%"}}
            ref={chartContainerRef}
        />
    );
};

const initialData = [
    { time: '2018-12-22', value: 32.51 },
    { time: '2018-12-23', value: 31.11 },
    { time: '2018-12-24', value: 27.02 },
    { time: '2018-12-25', value: 27.32 },
    { time: '2018-12-26', value: 25.17 },
    { time: '2018-12-27', value: 28.89 },
    { time: '2018-12-28', value: 25.46 },
    { time: '2018-12-29', value: 23.92 },
    { time: '2018-12-30', value: 22.68 },
    { time: '2018-12-31', value: 22.67 },
];

const Home: NextPage = () => {


  return (
    <Layout>
      <div className={styles.container}>
      <Head>
        <title>DEXE Launchpad</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="">RainbowKit</a> + <a href="">wagmi</a> +{' '}
          <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <ChartComponent data={initialData}/>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
          Made with ‚ù§Ô∏è by your frens at üåà
        </a>
      </footer>
    </div>
    </Layout>
  );
};

export default Home;
